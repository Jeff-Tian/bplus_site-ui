@namespace

: bopd-competitiveness

;

@widthBorder: 2px;
@colorBorder: rgba(221, 221, 221, 0.8);

@paddingBorder: 1px;

@widthCycle: 7px;
@widthCycleSmall: 5px;
@colorCycle: #319b67;
@colorCycleRed: #F65556;

.@{namespace} {
    position: relative;
    border: solid @widthBorder @colorBorder;
    border-radius: 50%;
    width: 80px;
    height: 80px;

    &.small {
        width: 65px;
        height: 65px;
    }
}

.@{namespace}--1 {
    background-color: @colorBorder;
}

.@{namespace} .@{namespace}-body {
    position: absolute;
    top: @paddingBorder;
    left: @paddingBorder;
    width: calc(~"100% - "@paddingBorder * 2);
    height: calc(~"100% - "@paddingBorder * 2);
}

.@{namespace} .@{namespace}-body .@{namespace}-txt {
    position: absolute;
    top: 50%;
    left: 0;
    margin-top: -0.5em;
    width: 100%;
    height: 1em;
    line-height: 1em;
    font-size: 14px;
    text-align: center;
}

.@{namespace} .@{namespace}-body .@{namespace}-left,
.@{namespace} .@{namespace}-body .@{namespace}-right {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    overflow: hidden;
}

.@{namespace} .@{namespace}-body .@{namespace}-left {
    left: 50%;
}

.@{namespace} .@{namespace}-body .@{namespace}-right {
    left: 0;
}

.@{namespace} .@{namespace}-body .@{namespace}-left .@{namespace}-left-cycle,
.@{namespace} .@{namespace}-body .@{namespace}-right .@{namespace}-right-cycle {
    position: absolute;
    top: 0;
    border-style: solid;
    border-color: transparent;
    border-radius: 50%;
    border-width: @widthCycle;
    /* width: calc(~"200% - " @widthCycle * 2); */
    /* height: calc(~"100% - " @widthCycle * 2); */
    width: 200%;
    height: 100%;
}

.small.@{namespace} .@{namespace}-body .@{namespace}-left .@{namespace}-left-cycle,
.small.@{namespace} .@{namespace}-body .@{namespace}-right .@{namespace}-right-cycle {
    border-width: @widthCycleSmall;
}

.@{namespace} .@{namespace}-body .@{namespace}-left .@{namespace}-left-cycle {
    left: -100%;
    border-top-color: @colorCycle;
    border-left-color: @colorCycle;
    transform: rotate(-45deg);
    /*animation: @{namespace}-left 1s forwards linear;*/

    &.red {
        border-top-color: @colorCycleRed;
        border-left-color: @colorCycleRed;
    }
}

.@{namespace} .@{namespace}-body .@{namespace}-right .@{namespace}-right-cycle {
    left: 0;
    border-right-color: @colorCycle;
    border-bottom-color: @colorCycle;
    transform: rotate(-45deg);
    /* animation: @{namespace}-right 1s forwards linear; */

    &.red {
        border-right-color: @colorCycleRed;
        border-bottom-color: @colorCycleRed;
    }
}

@keyframes bopd-competitiveness-left {
    0% {
        transform: rotate(-45deg);
    }
    50% {
        transform: rotate(135deg);
    }
    100% {
        transform: rotate(135deg);
    }
}

@keyframes bopd-competitiveness-right {
    0% {
        transform: rotate(-45deg);
    }
    50% {
        transform: rotate(-45deg);
    }
    100% {
        transform: rotate(135deg);
    }
}

.loop-bopd-competitiveness(@i) when (@i > 0) {
    .loop-bopd-competitiveness((@i - 1));
    .@{namespace}.@{namespace}-@{i} .@{namespace}-body .@{namespace}-left .@{namespace}-left-cycle {
        animation: ~"@{namespace}-left-@{i}" 1s forwards linear;
    }
    .@{namespace}.@{namespace}-@{i} .@{namespace}-body .@{namespace}-right .@{namespace}-right-cycle when (@i > 50) {
        animation: ~"@{namespace}-right-@{i}" 1s forwards linear;
    }
}

.loop-bopd-competitiveness(100);

.loop-bopd-competitiveness-left(@i) when (@i > 0) {
    .loop-bopd-competitiveness-left((@i - 1));
    @keyframes ~ "@{namespace}-left-@{i}" {
        0% {
            transform: rotate(-45deg);
        }
    50% when (@i > 50)
{
    transform: rotate(135deg);
} 100% when (@i <= 50) {
    transform: rotate(unit(-45 + ceil(3.6 * @i), deg));
} 100% when (@i > 50) {
    transform: rotate(135deg);
}
}
}

.loop-bopd-competitiveness-left(100);

.loop-bopd-competitiveness-right(@i) when (@i > 50) {
    .loop-bopd-competitiveness-right((@i - 1));
    @keyframes ~ "@{namespace}-right-@{i}" {
        0% {
            transform: rotate(-45deg);
        }
        50% {
            transform: rotate(-45deg);
        }
    100% when (@i > 50)
{
    transform: rotate(unit(-45 + ceil(3.6 * (@i - 50)), deg));
}
}
}

.loop-bopd-competitiveness-right(100);